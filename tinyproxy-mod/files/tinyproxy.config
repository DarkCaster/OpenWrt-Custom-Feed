config tinyproxy
	option enabled '0'
# Network namespace for use with tinyproxy
#	option netns 'service'
# Uncomment and set following options to use custom DNS resolver and search domain (optional)
#	option ExternalDNS '192.168.1.1'
#	option ExternalSearchDomain 'lan'
# User and Group the tinyproxy daemon should switch to after the port has been bound
	option User 'nobody'
	option Group 'nogroup'
# Address and port for incoming connections
	option Listen '192.168.1.1'
	option Port '63001'
	option Timeout '600'
# Locations for ErrorFiles
#	option ErrorFile_404 '/usr/share/tinyproxy-mod/404.html'
#	option ErrorFile_400 '/usr/share/tinyproxy-mod/400.html'
#	option ErrorFile_503 '/usr/share/tinyproxy-mod/503.html'
#	option ErrorFile_403 '/usr/share/tinyproxy-mod/403.html'
#	option ErrorFile_408 '/usr/share/tinyproxy-mod/408.html'
	option DefaultErrorFile '/usr/share/tinyproxy-mod/default.html'
	option StatFile '/usr/share/tinyproxy-mod/stats.html'
# Logging, choose one
	option LogFile "/var/log/tinyproxy-mod.log"
#	option Syslog '1'
# Log-level, choose one
#	option LogLevel 'Info'
#	option LogLevel 'Connect'
	option LogLevel 'Notice'
#	option LogLevel 'Warning'
#	option LogLevel 'Error'
#	option LogLevel 'Critical'
# ACL for incoming connections
	list Allow '127.0.0.1'
	list Allow '192.168.1.0/24'
	list Allow 'dede:fefe:fafa:caca::/60'
	option ViaProxyName 'tinyproxy'
# Allow to connect only to specified ports, allow all if not set
#	list ConnectPort 443
#	list ConnectPort 563

# Other options
# Bind the outgoing connections to a particular IP address.
#	option Bind 192.168.1.3
# Include the X-Tinyproxy header, which has the client's IP address when connecting to the sites listed.
#	list XTinyproxy mydomain.com
# The location of the filter file.
#	option Filter "/etc/tinyproxy/filter"
# Filter based on URLs rather than domains.
#	option FilterURLs 1
# Use POSIX Extended regular expressions rather than basic.
#	option FilterExtended 1
# Use case sensitive regular expressions.
#	option FilterCaseSensitive 1
#	option FilterDefaultDeny 1
# If an Anonymous keyword is present, then anonymous proxying is enabled.
# The headers listed are allowed through, while all others are denied. If
# no Anonymous keyword is present, then all header are allowed through.
# You must include quotes around the headers.
#	list Anonymous "Host"
#	list Anonymous "Authorization"

# Turns on upstream proxy support.
#
# The upstream rules allow you to selectively route upstream connections
# based on the host/domain of the site being accessed.
#
# For example:
#  # connection to test domain goes through testproxy
#
#config upstream
#	option type proxy
#	option via testproxy:8008
#	option target ".test.domain.invalid"
#
#config upstream
#	option type proxy
#	option via testproxy:8008
#	option target ".our_testbed.example.com"
#
#config upstream
#	option type proxy
#	option via testproxy:8008
#	option target "192.168.128.0/255.255.254.0"
#
#  # no upstream proxy for internal websites and unqualified hosts
#
#config upstream
#	option type reject
#	option target ".internal.example.com"
#
#config upstream
#	option type reject
#	option target "www.example.com"
#
#config upstream
#	option type reject
#	option target "10.0.0.0/8"
#
#config upstream
#	option type reject
#	option target "192.168.0.0/255.255.254.0"
#
#config upstream
#	option type reject
#	option target "."
#
#  # default upstream is internet firewall
#
#config upstream
#	option type proxy
#	option via firewall.internal.example.com:80
#
# The LAST matching rule wins the route decision.  As you can see, you
# can use a host, or a domain:
#  name     matches host exactly
#  .name    matches any host in domain "name"
#  .        matches any host with no domain (in 'empty' domain)
#  IP/bits  matches network/mask
#  IP/mask  matches network/mask
